<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[面试一二事]]></title>
    <url>%2Finterview-question%2F</url>
    <content type="text"><![CDATA[前言整理录音的时候才发现自己有多菜，这都回答的啥呀…… 面试题 Java 八大基本类型 short 变量 +1，真的细，还好好久之前瞄了一眼 New String(“123”) new 了几个对象 equals 与 == HashMap 原理 红黑树定义、优点与普通二叉树的区别，效率 ConcurrentHashMap Synchronized 普通同步方法，锁是当前实例对象 静态同步方法，锁是当前类的class对象 同步方法块，锁是括号里面的对象 volatile 反射 IOC 原理以及好处 AOP JDK 原生 CGLib Spring 事务级别 SpringBoot 自动化 垃圾回收 引用计数 root 节点 Mybatis 执行流程 Mybatis 与 JDBC 的区别 NIO TCP 与 UDP 区别 TCP 三次握手 MySQL 索引 MySQL 死锁 MySQL 乐观锁以及悲观锁 查看日志命令 人生 未来一年的规划 理想的工作环境]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>记录</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[真的早就是优势]]></title>
    <url>%2Fspring-will-end%2F</url>
    <content type="text"><![CDATA[提要总说春江水暖，但只有体验过才知道今年的水让我瑟瑟发抖。我就是死也不会考研？ 感悟四月快走了，仍然没有春招 Offer。不过最近的感悟倒是获得挺多，当然还有血淋淋的教训。 早 早就是优势。 投简历越早投越好，就是知道内推信息就得立刻马上投。不要像我这样收藏着一大波招聘内推消息，过了几礼拜才投，hc 早没了……加上自身学校没有 Buffer 加成，我也不知道两个月前哪来的自信（不要跟我扯招聘时间，真的是越早投机会越大，因为我就是看了招聘时间，结果很难受，我挺后悔的）不举例子了，因为排队的人太多，我已经被简历劝退了两三次了，真的是血淋林的教训啊。 不过从另一方面来讲，春天为秋天积攒了经验，总比秋天结束的时候才知道好，毕竟大目标还是秋天，只是夏天缺乏了漂亮光鲜的履历罢了，但说实话挺难受的。 革命尚未成功有人说可以准备秋天了，但我并不认同。因为还有收官战，虽然金三银四转瞬即逝，但春天还没结束，拿起武器继续战斗吧！ 未完，待续……]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>春招</tag>
        <tag>扯淡</tag>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java 并发入门]]></title>
    <url>%2Fthread%2F</url>
    <content type="text"><![CDATA[碎碎念 拖更一时爽，一直拖更一直爽 最近忙于找实习以及挑战杯省赛，两者聚在一起当然就忙得不可开交。关于省赛，前几篇文章也有提到，其实我是不太愿意花时间搞的，但是命运使然，只好寻找某一平衡点喽。 概念 介绍一些概念，当然也为了使自己印象深刻 线程操作系统调度的最小单元，一个进程中的所有的线程都有完全一样的地址空间，意味着共享同样的全局变量。 上下文切换CPU 分配给各个线程时间片，但因为时间片很短，所以 CPU 不停的切换线程。但是 CPU 切换前会保存上一个任务的状态（进程状态、优先级、程序 I/O 的状态、文件描述符等）到内存，以便下次切换回这个状态。 解决方案 多次上下文切换会影响多线程执行速度 无锁并发编程 CAS 算法 使用最少线程 协程 线程间通信 等待/通知的经典范式 等待方 123456synchronized(对象)&#123; while(条件不满足)&#123; 对象.wait(); &#125; 对应的处理逻辑&#125; 通知方 1234synchronized(对象)&#123; 改变对象 对象.notifyAll();&#125; Thread.join() 线程 A 执行了 thread.join() 语句时表示，当前线程 A 等待 thread 线程终止之后才从 thread.join() 返回。 ThreadLocal 个人看源码理解就是在虚拟机栈中存着引用，真正存值的是 ThreadLocalMap。而 ThreadLocalMap 内部用 Entry 存放 K-V，哈希冲突则采用的是开放寻址法。另外，ThreadLocal 在线程池里容易存在内存泄漏，因为只要线程被 GC 回收，即使弱引用 Key 的值为 null，一般不会内存泄漏。就怕线程池回收利用，Key 为 null 了，value 则还有值。解决方法就是调用 remove() 方法，将值设置为 null。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>春招</tag>
        <tag>面试</tag>
        <tag>多线程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[深入理解 Java 虚拟机]]></title>
    <url>%2Fjvm%2F</url>
    <content type="text"><![CDATA[前言有输入肯定要有输出。 内存区域划分 程序计数器唯一一个没有规定 OOME 的地方。执行 Java 方法时记录当前方法的 JVM 指令地址；执行 Native 方法时，计数器为空。 Java 虚拟机栈 本地方法栈 堆内存管理的核心区域，分为新生代和老年代，再细致一点分为 Eden 空间、From Survivor、To Survivor 等 方法区所有线程共享的内存区域，存储元数据，如类结构信息、字段、方法等。无法满足内存分配需求时，抛出 OOME。 运行时常量池方法区的一部分，存放编译期生成的各种字变量，还有运行时的符号引用等。例如 String.intern() 后放置的地方。 直接内存JDK 1.4 引入 NIO 类，它可以使用 Native 函数库直接分配堆外内存，然后通过一个存储在 Java 堆中的 DirectByteBuffer 对象作为这块内存的引用进行操作。 Code CacheJIT Compiler 在运行时对热点方法的编译；GC 运行时部分需要占用的空间等，但 JVM 规范中并没有涉及。 OutOfMemoryError堆溢出不断创建对象并且无法回收 栈溢出在单线程下，当内存无法分配时，虚拟机抛出通常是 StackOverflowError 异常。 方法区运行时常量池溢出JVM 对于方法区的回收非常不积极，例如老版本的 JDK 处理 String.Intern() 时占用太多空间。随着元数据区的移除永久代，类元数据只受本地内存影响。 本机直接内存溢出垃圾回收不会主动收集 Direct Buffer，需要自己手动调 System.gc()。另外。不会在 Heap Dump 中看见。 垃圾回收判断对象是否存活，引用计数法很难解决循环引用的问题，所以才有了可达性分析 GC Roots 的对象包括以下几种： 虚拟机栈中引用的对象 方法去类静态属性引用的对象 方法去常量引用的对象 Native 方法引用的对象 可达性分析算法至少两次标记过程，第一次标记筛选出有必要执行的 finalize() 方法的对象，对象可在 finalize() 中自救一次，因为 finalize() 方法只会被系统自动调用一次。 回收算法 标记-清除算法效率不高，会产生大量不连续的内存碎片 复制算法新生代采用复制算法收集内存，大对象通过分配担保机制进入老年代 标记-整理算法将存活的对象移至一端，减少内存碎片 分代收集算法根据年代特点采用最适当的算法，需要上述算法支持 内存分配 都可通过参数设定 对象优先在 Eden 中分配 大对象直接进入老年代 长期存活的对象将进入老年代年龄计数器 动态对象年龄判断Survivor 空间中相同年龄所有对象大小总合大于 Survivor 空间的一半，年龄大于或等于该年龄的对象就直接进入老年代 空间分配担保需要检查老年代的空间是否满足新生代所有对象空间，不够的话还要查看设置的值是否允许冒险，以决定 FullGC 是否有必要 类加载 加载获取字节流，生成对象，提供数据访问入口 验证是否符合虚拟机规范 准备为变量分配值 解析将符号引用替换为直接引用 初始化执行类构造器 () 方法]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java 内存模型与 volatile]]></title>
    <url>%2Fjmm-volatile%2F</url>
    <content type="text"><![CDATA[感悟最近看《深入理解 Java 虚拟机》的一些笔记，又是一本相见恨晚的书，强烈推荐前几章和后面几章。 内存模型 此图来自《深入理解 Java 虚拟机》，看完以后感觉这个知识水平都提高了2333。这里的主内存不是内存条，而是虚拟机的内存的一部分。不同的线程通过刷新主内存中的值来进行同步。如果没有线程并发的考虑，闭着眼睛就能想到数据的不一致。 内存模型定义了以下 8 种操作来完成主内存与工作内存同步的细节，除去特殊情况，每一个操作是原子不可再分的 lock unlock read load use assign store 另外还定义了一些规则，太多了没咋记住……不过也以此引出了最为常见的先行发生的原则，用于确定访问是否线程安全。 happen-before 规则中文名叫先行发生规则，含义是Java 内存模型下天然存在一些关系，无需同步器去实现，可以在编码中直接使用。换句话说，不在先行发生规则的两个操作，虚拟机可以对它们进行重排序，也就是线程不安全了。 规则有八条： 程序次序规则同一线程按照控制流顺序 管程锁定规则unlock 指令操作先于 lock 操作 volatile 变量规则、写操作先于读操作 线程启动规则start 最先发生 线程终止规则终止检测最后发生 线程中断规则interrupt() 先行发生于代码检测中断 对象终结规则初始化先于 finalize 传递性A 先于 B，B 先于 C 需要注意的一点是，时间先后顺序与先行发生顺序没有太大的关系，一切以先行发生的原则为准。 volatile 有了内存模型的概念，对 volatile 又有了几分理解Java 虚拟机提供的最轻量的同步机制，当一个变量被定义为 volatile 时有一下两种语义 可见性volatile 变量对所有线程是立即可见的，对 volatitle 变量所有写操作都能立即反映到其他线程中。但注意他并不是安全的，因为该操作不是原子性的。所谓原子性，就是该变量执行如运算等操作只有等它运算完写入主内存中，其他线程才能操作该变量。没错，保证原子性你可以理解为加个锁。 禁止指令重排序 指令重排序指操为了采用流水线机制加快指令的处理速度重排序分为两类：编译期重排序和运行期重排序，分别对应编译时和运行时环境。重排序的前提是需要满足以下条件 在单线程环境下不能改变程序运行的结果； 存在数据依赖关系的不允许重排序 普通变量仅仅保证在方法执行过程中所有依赖赋值结果的地方能获取正确结果，而不能保证赋值操作和代码执行顺序一样 如何实现 在该变量的写操作之前编译器插入一个写屏障 在该变量的读操作之前编译器插入一个读屏障 翻译到汇编代码层面 lock addl $0x0,(%esp) 就是将 ESP 寄存器的值加 0，使本 CPU 的 Cache 写入内存，该写入操作会引起别的 CPU 或者别的内核无效化其 Cache。通过该空操作让前面对 volatile 变量的修改对其他 CPU 立即可见。 重排序为了优化，至于禁止重排序，也是将该变量的值强制刷出缓存，将修改同步到主内存，意味着所有之前的操作已经完成，也就达到了无法跨越内存屏障的效果了。这里要仔细体会。 注意点 volatile 不保证原子性 屏蔽指令重排序操作 JDK 1.5 中才被修复，此前不可完全避免重排序 总结强烈推荐《深入理解 Java 虚拟机》，看目录你会发现那些曾几何时听说过晦涩难懂的名字都会在此书中讲到。]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[几道面试题]]></title>
    <url>%2Finterview%2F</url>
    <content type="text"><![CDATA[前言 复习的时候就想写了，为自己做点笔记，加深印象理解原理吧。 题目 又一个我敬佩的人 CaoZ 老师分享在知识星球的片段 从你浏览器输入网址，到网页打开。中间都经历了什么。 如果现在有用户反馈你的网站打开很慢，或者说打不开，你考虑的判断和排查步骤是什么，以及为什么。 现在数据库出现了 too many connections 错误，请问排查思路和后续动作是什么。 理解第一题乍一看像 DNS 题，定睛一看，还是一道 DNS 题。其实不尽然。说下我看完曹老师文章后的理解。 从输入网址，浏览器会检查域名是否在缓存当中，若是国内第三方“良心”浏览器会触发钩子，会跳转微软搜索页面。然后才是本地 host 文件的判断。这个文件映射的是键值对，在 GFW 没有升高之前，我通过更改 hosts 文件还去看了一下世界。当然那时候也不懂什么 hosts，到后来才慢慢接触了解到。 如若本地客户端仍没有完成解析，就会真正请求域名服务器来解析这个域名。首先从网络配置中获取本地 DNS 解析服务器地址，一般不会离得太远，而且性能极好，能完成 80% 的工作。缓存时间根据 TTL 值控制。 若本地 DNS 仍没有命中，需根据本地 DNS 设置（是否含有转发器进行查询）。如果没有转发模式，直接查找根服务器，要求查找该 URL 中顶级域名服务器（gTLD）。然后依次查找权威 DNS 服务器，例如 github.com 的权威服务器。之所以叫他权威服务器是因为管理着众多二级域名。他将给本地 DNS 服务器返回一个具体的 IP 地址。本地 DNS 服务器将缓存结果的同时发送给客户端。当然有很多权威服务器做了全局均衡代理，权威服务器将返回众多 IP。客户端 DNS 解析器缓存结果并通过随机或者轮询等机制进行访问。 如果用的是转发模式，本地 DNS 则会将请求转发至上一级 DNS 服务器。上一级则会将请求转发上上一级或者寻找根 DNS。 第二题场景题，虽然还是学生，但是我认为很真实。 首先当然自己打开网站试试喽。如果正常，考虑全国测速，并进行 CDN 全国加速（CDN 部署时个人认为就要加上）。如果慢，一种特殊的情况是 DNS 解析出问题了，直接 IP 访问试试。还可以用 Chrome 开发者工具进行相应的抓包等。 第三题查看连接池日志，当然我也会优先考虑数据库连接有没有 close 的问题，其次是高并发下出现阻塞，导致大量连接被阻塞。然后再查看数据库相关的连接配置。 参考链接 what-happens-when caoz的梦呓 mysql-error-too-many-connections]]></content>
      <categories>
        <category>面试</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>面试</tag>
        <tag>知识星球</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[空谷幽兰，心如皓月]]></title>
    <url>%2Ffor-interview%2F</url>
    <content type="text"><![CDATA[杂谈2018 年终总结给自己立的每周输出两三篇博客的 flag 快倒了……此篇就当这几天为春招奋战的总结了。 现状很不幸的是，在今天之前只投了两份简历，一份被拒了，还有一份内推到的笔试。然而这笔试什么玩意，分两场笔试， 一场 30 分钟的逻辑推理。这尼玛真的有病，浪费我感情。我看了几道根本看不出来规律，就开始乱选了。还有一场正规的笔试，没发挥好，也可以说第一次没经验，菜。很多基本的选择题没有复习，点了下一题后还不能改，三道算法题一道没写出来。不过唯一的好处就是，知道了 笔试的形式，也为以后做了准备23333。 笔试之后当然是倍受打击了，至于能不能像小说主人公那样在后面逆转我就不知道了。 选择上篇博文提到了希望杯比赛，可能很多人不知道。如果换个名字，挑战杯就会很熟悉了。上回说到，我为了校赛答辩准备很久，也牺牲了一部分准备春招的时间。天真的以为过了校赛答辩就可以松一口气了，但实验室的老师明显是想让我拼一拼从省一进国赛。我提出了接下来我的想法，老师不置可否。。 环境 我当然是想准备春招了，一生只有一次。 指导老师嘛总是忽悠我去努力争取一下省一，还提出了有奖金啊啥的，实习的事可以放一放，暑假的事又不急。 我当时心里一万个 mmp，终于体会到了什么叫做身不由己。首先，我很明确的想过，春招和挑战杯的事情，以春招占大头。因为我想进大厂，甚至想直接转正。这是乌鸡变凤凰的最好时机，而老师却认为暑期小公司实习就差不多了。 其次，跟我说奖金和报销经费。他们竟然认为我是为了钱才去实习的。拜托，搞清楚，这些小钱我根本不放在眼里。你确定 10000 块钱跟阿里、头条等大厂的实习 Offer 比起来算事么？？？我当时就差点甩出一句，现在你给我两万块钱现金，我眉头都不会皱一下地离开去准备春招。 当然上面的话都是我后面的心理活动，并没有在表面上与老师撕破脸皮，只是隐晦的表达我还是要准备面试的意思。但那天我真的很气。气自己没敢说，气老师信息获取滞后。其实，跟我们学院的总体环境有关系。我隐约认为他们根本没有意识到春招秋招的重要性，或者，他们太为自己、学院的名誉着想了，并不在意学生的前途。 理想 上面那些话窝在肚子里很久了，讲出来也舒服点。 最近在网络上发现了不少优秀大佬的博客笔记等 左耳朵耗子本文文章名也取自他的座右铭。其实，寒假的时候他的博客就在收藏夹里了，也订阅了他的极客专栏。这尼玛简直是程序员的偶像，也是我未来奋斗的目标。我一直想把博客做成他那样子，游客点进一篇文章，便被他的作者吸引得浏览全站。随后又发现了更多有意思的文章，就像酒香何必在意巷深那样，越品越有味道。我特别喜欢这种感觉，如若能交流一下交个朋友定是极好的，比如下面这位。 Kuangcp我 GitHub 上唯一关注的人，他的笔记仓库让我叹为观止。]]></content>
      <categories>
        <category>日常记录</category>
      </categories>
      <tags>
        <tag>个人</tag>
        <tag>春招</tag>
        <tag>未来</tag>
        <tag>思考</tag>
        <tag>记录</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[魔鬼藏在细节中]]></title>
    <url>%2Fdetails%2F</url>
    <content type="text"><![CDATA[碎碎念 The devil is in the details. 被拒了简历，心情低落… 答辩本来也没啥，就是整个团队去拿着项目参加比赛，我只是该项目总负责人以及后端开发。但是很不幸的是，团队里考研的考研，划水的划水，也就只剩我去演讲…… 那么问题就来了，一写代码的让我分享技术啥的我倒还可以凑活，这尼玛直接介绍项目让我很难受啊…… 以上纯属牢骚，有点偏题了，但是在金三银四的黄金校招周中，每分每秒都十分宝贵。然而我还是不敢跟老师明说，不过我已经说明，忙完希望杯就不干活了，就当这几天为以后收利息了吧，虽然付出的代价也挺大的。 细节 我在这立个 flag，能进省赛答辩时的细节 微笑面对评委老师不过他们没怎么看我2333 在答辩结束后竟然还能询问真的是细节，我没有想到。这次比赛主要是给专家看有哪几个项目可以参加省赛的，有指导意义，也是老师不找演讲人的理由。所以，辅导员在结束后带着我们又找了一下三位和蔼可亲的评委老师。虽然已经评完分了，但我认为真的很有必要。 差距我们学院还有一组是关于图像的科技创新作品，但是在论文学术类以及科技发明类摇摆不定，被评委建议目标应该明确。项目中有几篇是在 SCI （大概是叫这个名字吧，不了解）发表的，但评委说不在二区一文不值。一旦出校在省内比拼，浙大的论文水平绝对碾压我们学校，根本没有可比性。这时，我才意识到学校差距的存在。 我也加了很多内推实习群，当看到那些 985/211 的 ID，感慨竞争对手的强大，绝对不亚于高考。 高考我已经输过一次了，没有人想输第二次。 结语 古代剑客们在与对手狭路相逢时，无论对手有多么强大，就算对方是天下第一剑客，明知不敌，也要亮出自己的宝剑，即使倒在对手的剑下，也虽败尤荣。 杀入春招。]]></content>
      <categories>
        <category>日常记录</category>
      </categories>
      <tags>
        <tag>个人</tag>
        <tag>学习</tag>
        <tag>项目</tag>
        <tag>春招</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一个热点玩转树莓派]]></title>
    <url>%2Fraspberry-setting%2F</url>
    <content type="text"><![CDATA[前言前几天千魂剑问我关于树莓派的问题，好久不用了，感觉有点遗忘，就有了此篇文章。 安装系统 官方下载地址对是压缩包，所以 Windows 下的 Win32 Disk Imager 可以直接刻录 zip 到 TF 卡 工具推荐 读卡器虽然 SD 卡也可以，但现在很多电脑没有 SD 卡槽 镜像烧录 Win Rufus Mac买不起，没用过 Linux dd 命令 ssh 两种方法，网线，热点，但两者需要在一个局域网内 。拥有屏幕的用户请路过… 网线连一根网线到路由器，在路由器后台查看 IP 撒花完结。 热点 其实，树莓派基金会为了达成这个需求， 2017-2018 年逐渐在改善系统来适应这种优雅的方式，所以此方法只适用于新版系统。 打开烧录好的内存卡文件夹 找到 /boot 分区 建立一个空的 ssh 文件以及 wpa_supplicant.conf 1234567country=GBctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdevupdate_config=1network=&#123; ssid=&quot;你的Wifi名称，注意大小写&quot; psk=&quot;你的Wifi密码&quot;&#125; 说明：空的 ssh 文件是为了开启 ssh 服务，系统默认不开启；wpa_supplicant.conf 是为了自动连接热点，ssid 支持中文。开机会将会删除以上两个文件。 raspi-config 默认管理员用户为 pi，密码为 raspberry 设置时间 将 tf 卡填充满默认系统只占很少的空间 镜像源更改 树莓派源分为两种，一种为树莓派基金会提供，另一种由独立开发者提供 查询版本号lsb_release -a 不一样的版本更改源的地址不一样，版本号有 Stretch、Jessie 等，一般最新的是 Stretch 官方源修改这个软件源相关资料比较少，修改树莓派基金会单独提供的源 /etc/apt/sources.list.d/raspi.list1deb https://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ stretch main ui 开发源修改 /etc/apt/sources.list12deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpideb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi 最后别忘了 sudo apt-get update 更新系统 个人体验 我是拿树莓派当本地服务器的 喜欢纯命令行，不喜欢 VNC，而且感觉有点卡顿 风扇有点响，据说要买那种悬浮的，然而我是一套 散热片、亚克力壳，就是好看 不下片的话，8G TF 卡够了 参考链接 树莓派—raspbian软件源（全） 树莓派如何完全无头(无屏无网线无键盘鼠标)安装]]></content>
      <categories>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>树莓派</tag>
        <tag>设置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[清除 Git 敏感信息]]></title>
    <url>%2Fclean-git-passwd%2F</url>
    <content type="text"><![CDATA[前言算是 Git 的奇淫怪技 背景偶然在水群时看到一条消息，有人将服务器密码提交到了 Git 记录上。众所周知，公有仓库的 Git 记录是所有人可见的。所以一旦有敏感信息，不法分子就可以从你的 commit 记录中寻找突破口。 解决Git 命令行12git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch sensitive-data.py' --prune-empty --tag-name-filter cat -- --allgit push origin --force –all 这是我谷歌的命令，大概是在 Git 记录中删除带有敏感信息的文件，然后强制 push BFG那么有没有更优雅的方法呢，答案是肯定的。 如标题所言，BFG Repo Cleaner 能帮到我们。该工具是用 Scala 写的，专门为清除 Git 提交记录中带有敏感信息而产生的。 使用 需要 Java 7 以上版本 安装以及使用 点此下载 jar 包java -jar bfg.jar 命令参数 yay -S bfgbfg 命令参数 如上所示，有两种安装方式，第一种是通用的运行下载的 jar 包，另一种是为 Arch 用户准备的…（这时候就要喊出“Arch 牛逼”）因为我是 Arch 忠实粉丝，所以就以 Arch 中的命令作为示范… 测试在 GitHub 仓库中创建一个专门来测试的仓库（我学 Git 的时候就已经有一个专门用来测试 Git 的仓库），将密码假装不小心上传到 GitHub。 当发现后，重新将密码去除后重新提交到 GitHub。此时，如果不看 commit 记录就不会知道历史版本，bfg 这个工具就为了防止有心人通过你的 commit 记录捕获你的敏感信息 克隆仓库的 .git 文件夹 1git clone --mirror git@github.com:yi-yun/git777github-learn.git 在本地创建 replace.txt文本名字是任意的，文本内容需要将密码填上，默认替换成 ***REMOVED***，也可以将其替换成自己想要的字符，规则如下所示 12345PASSWORD1 # Replace with &apos;***REMOVED***&apos; (default)PASSWORD2==&gt;examplePass # replace with &apos;examplePass&apos; insteadPASSWORD3==&gt; # replace with the empty stringregex:password=\w+==&gt;password= # Replace, using a regexregex:\r(\n)==&gt;$1 # Replace Windows newlines with Unix newlines 执行命令需要注意两点，一是文本名字与路径，二是相关参数，也可用 --replace-text 1bfg -rt ~/replace.txt git777github-learn.git 提交更改 123cd git777github-learn.gitgit reflog expire --expire=now --all &amp;&amp; git gc --prune=now --aggressivegit push 拓展这货还能删除大文件，有需要的童鞋可以参考官网 参考 官网 清除历史提交记录中的敏感信息 不小心把密码上传到 GitHub 了，怎么办]]></content>
      <categories>
        <category>代码协作</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>Git</tag>
        <tag>GitHub</tag>
        <tag>工具</tag>
        <tag>Arch</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[早就是优势]]></title>
    <url>%2Fearly-is-advantage%2F</url>
    <content type="text"><![CDATA[前言 此篇纯属扯淡 如题。 起因在看本文前，我希望你之前看过这篇文章并申请了账号，因为白天收到站内信 可能被白嫖太多导致这个策略吧2333，时间到期你就需要掏钱了，也就意味着腾讯云对象存储无法再为用户提供免费的服务。你付费当然可以当我没说…其实也没多少钱 主要是个人不喜欢每个月或者每年提供多少钱而且图床一旦选定，更换是件很麻烦的事情 总结 站在风口上，猪都会飞 此类性质的事件买 VPS 套餐遇到的最多，其中就包括前段时间搬瓦工下架他的传家宝，让我后悔的啊。虽然速度可能不咋地，但是类似大厂家 19.99 刀一年的服务器已经很少了。虽然是小事吧，但是又让我深刻地体会到了“早就是优势”。 就如同时代的风口，没有人能精准预测未来的风口在哪。只能说，我觉得可能某个行业不错，学习以及积攒相关知识，厚积薄发，等待真正机会来临。 另外，推荐一部短片 change(); window.onload = function() { window.onresize = change; }; function change() { var c = document.getElementById("c"); var p = c.parentNode; // div容器的父节点，p是parent的首字母 // 下面是适配容器的宽高 c.style.width = p.offsetWidth + "px"; if (navigator.userAgent.indexOf('iPad') === -1 && p.offsetWidth >= 480) { // 针对非iPad和div容器父节点宽度值大于OR等于480的情况，480是一个边界值 // 采用了16:9的比例进行缩放，118px是推荐面板+进度条+哔哩哔哩入口跳转栏等元素高度数值的总和 c.style.height = c.offsetWidth / 16 * 9 + 118 + 'px'; } else { // 针对iPad或div容器父节点宽度值小于480的情况（手机） c.style.height = c.offsetWidth / 16 * 9 + 'px'; } }; 嵌入视频链接参考]]></content>
      <categories>
        <category>日常记录</category>
      </categories>
      <tags>
        <tag>个人</tag>
        <tag>图床</tag>
        <tag>扯淡</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DigitalOcean 的羊毛]]></title>
    <url>%2FDigitalOcean%2F</url>
    <content type="text"><![CDATA[前言 虚拟专用服务器（英语：Virtual private server，缩写为 VPS），是将一台服务器分割成多个虚拟专享服务器的服务。实现VPS的技术分为容器技术和虚拟机技术 。在容器或虚拟机中，每个VPS都可分配独立公网IP地址、独立操作系统、实现不同VPS间磁盘空间、内存、CPU资源、进程和系统配置的隔离，为用户和应用程序模拟出“独占”使用计算资源的体验。VPS可以像独立服务器一样，重装操作系统，安装程序，单独重启服务器。 用途 搭建博客 搭建 VPN 挂机 免流 etc… 介绍VPS 厂商比较有名的有搬瓦工，Vutlr，Linode 等，当然还有要介绍的主角 DigitalOcean 体验说下大致的体验吧，我用过 Vutlr、DigitalOcean 以及两家不支持换 IP 的小厂商 Vutlr日本机房延迟还行，就是容易被封 IP，虽然可更换 IP，但总归麻烦 DigitalOcean用的 ss，换了好几个地方的机房，没有被封过一次…也可能运气好 羊毛 DigitalOcean 需要 PayPal，绑定国内的借记卡或者信用卡就能用 麻烦吧，是的当初我也这么想，但换个角度，这样不也限制了很多国人来注册使用么，起码不会被 GFW 当做重点关注对象 点我的邀请链接注册充值 5 刀就可获得 100 美元的金额总共加起来是 105 美元，不过要 2 个月内花完，一辈子都没玩过 50 刀一月的服务器 GitHub 学生用户可获取 65 美元的金额GitHub 学生认证以及 DO 优惠码都需要与两家的客服邮件沟通 机房选择机房看所处地方以及手机运营商，如果你是移动用户，那么选新加坡机房，联通和电信用户新加坡绕路美国，因为当初是新手的缘故，我选的新加坡。当回到学校联通信号时，慢的质疑人生…后来才发现，原来是联通和电信绕路。 恕我直言，DO 的机房就一个洛杉矶，但是足够了。]]></content>
      <categories>
        <category>日常记录</category>
      </categories>
      <tags>
        <tag>羊毛</tag>
        <tag>VPS</tag>
        <tag>推荐</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Arch Linux 安装手记]]></title>
    <url>%2Finstall-Arch%2F</url>
    <content type="text"><![CDATA[前言 用户友好都是狗屁，用户中心才是王道。 Arch 将这句话解释得淋漓尽致。 介绍 这是一段科普 Arch 的文字 Arch 拥有我见过的迄今为止最丰富的 Wiki（维基百科：？？）。与此同时，它的第三方仓库 aur 则是将开源的力量发挥到了极致。你见过一行命令就能在 Linux 上安装 QQ、TIM、微信、百度云和迅雷极速版么？另外，Arch 的社区也不输给其他发行版。相信我，你不会后悔装 Arch Linux 的。 我很庆幸第一台使用的主力 Linux 系统是 Arch Linux，因为它让我结识了很多朋友，也让我在 Linux 方面有更多的理解。 PS：如果你是新手，建议你先安装 Manjaro，这是 Arch 的衍生版，开箱即用，图形化界面安装，只需少量配置即可入我 Arch 神教。 准备 磁盘空间 一个 U盘 最好有根网线 看过 Wiki 安装教程（左侧可切换语言） 刻录 去 163 镜像源找日期最近的镜像下载（PS：最近日期的镜像可以减少包的更新） 用 Rufus 或者其他的刻录软件将 U盘 制作成启动盘 引导方式 UEFI/GPT BIOS/MBR 上面是是常见的两种引导方式，斜杠右边是引导方式所对应的硬盘格式，你需要搞清楚自己电脑的引导方式。如果你想装双系统更得注意。 磁盘空间将预计安装 Arch 的磁盘整个分区格式化，然后考虑磁盘分配。接下来是一位曾经划分磁盘空间不够的博主给你们的忠告 如果你预留的空间小于 100G，请不要划分什么 /home 分区，除非你只是实验。因为你把握不好大小，即使要划分，请把根目录划的大一点，起码六四开。 磁盘空间不够，请不要另外划分 /var 等分区，因为你不知道到底需要多大，到时候很麻烦 最好另外留 1G 空间给 /boot，我不喜欢划分交换空间，而喜欢采取交换文件的形式，因为交换文件可大可小（滑稽） 综上，1G /boot，剩下的留给根目录，老玩家请随意… 安装 电脑引导方式是 BIOS，就拿它来举例，UEFI 无非是要多挂载一个分区 U盘启动记得插上网线，每台电脑的 U盘 快速启动不一样，选对 U盘 则会看到下面这个界面 连接网络 当然是 ping -c 4 www.baidu.com，百度别的不好，但他是最好的测网络连通性的网站 有线连接dhcpd 无线连接输入 wifi-menu，如果名称有中文可能会乱码，我偶尔还会连不上，所以推荐有线 更新系统时间1timedatectl set-ntp true # 如果是双系统会涉及到时间不同步的问题 时间不同步参考文档 修改镜像文件 输入 vim /etc/pacman.d/mirrorlist 输入 /China 回车将光标移动到对应的网址，依次输入dd、gg、Shift P 输入 :wq 保存退出 磁盘分区 最重要的一块内容，难就难在这里 输入 fdisk -l 查看现有可操作磁盘 找到选中的磁盘，例如我选中了 sdb cfdisk sdb 图形化操作磁盘空间 我的分区是 /boot(Type:EFI)、/(Type:Linux )。记得操作完选择 write mkfs.ext4 /dev/sdb3 格式化你相对应的根分区 挂载分区挂载就是把额外添加的磁盘分区(这里我们指的就是刚刚格式完的硬盘分区)指定在特定的文件夹下，当我们打开这个文件夹的时候，文件夹的空间大小就是使用该分区的存储空间。 /mnt 文件夹是 Linux 专门挂载用的，挂载后，会在mnt里多出相应设备的目录。由于我们目前所有操作都还在 U盘 里，所以需要把磁盘分区挂载到 U盘 下的 /mnt 下，才能进入分区进行系统安装和配置。 下面是个例子123mount /dev/sdb3 /mnt # 挂载根分区mkdir /mnt/boot # 创建文件夹mount /dev/sdb2 /boot # 挂载 /boot 分区 挂载好可以输入 lsblk 查看下挂载结果 安装系统 需要有网 123pacstrap /mnt base base-devel # 安装系统genfstab -U /mnt &gt;&gt; /mnt/etc/fstab # 生成卷标arch-chroot /mnt # 进入/mnt下的系统 设置系统 需要对刚刚装好的系统 Arch Linux 进行必要的配置，后面操作的都是对硬盘上的 Arch Linux 操作 设置时间12ln -sf /usr/share/zoninfo/Asia/Shanghai /etc/localtime # 设为上海时间hwclock --systohc --utc # 设置硬件时间 修改编码 pacman -S vim #安装vim vim /etc/locale.gen 找到 en_US.UTF-8 和 zh_CN.UTF-8，把前面的#号删除，:wq 保存退出 locale-gen #重新生成locale echo LANG=en_US.UTF-8 &gt; /etc/locale.conf 主机名称 偷个懒 passwd # 设置 root 密码 必要软件12pacman -S networkmanager ntfs-3g os-prober grubsystemctl enable NetworkManager # 后面三个是引导需要的 安装引导12grub-install --target=i386-pc /dev/sdx （将sdx换成你安装的硬盘）grub-mkconfig -o /boot/grub/grub.cfg 双系统需要安装 os-prober 以及 ntfs-3g 后 grub 生成引导入口时就会检测出 Win10 PS:如果报 warning failed to connect to lvmetad，falling back to device scanning 错误。简单的方法是编辑 /etc/lvm/lvm.conf 这个文件，找到 use_lvmetad = 1 将1修改为0，保存，重新配置 grub。 完成123exit # 退出新系统回到启动盘系统umount -R /mnt # 取消/mnt挂载reboot # 重启 注意这个时候你可能会卡在有两行提示的地方无法正常关机，长按电源键强制关机即可 参考文章 Arch Wiki 以官方Wiki的方式安装ArchLinux 系统安装篇]]></content>
      <categories>
        <category>日常记录</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>Arch</tag>
        <tag>收获</tag>
        <tag>Linux</tag>
        <tag>安装</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[React Native 爬坑笔记]]></title>
    <url>%2Freact-native%2F</url>
    <content type="text"><![CDATA[提要早就听说了 FaceBook 出的 React Native 混合开发，一套代码两个平台的应用。前几天终于有幸尝试了几个应用，折腾死我了… 环境搭建 Android Studio因为之前有一定的原生安卓开发经验，所以 Android Studio 的环境我是有的 Node好巧，我也有，因为这个 Hexo 博客（手动滑稽）。这里要提醒新手的是最好改一下镜像链接，国外而很慢…还有记得装 yarn，比 npm 好用 Python官网要 2.0，但是我电脑上装的 3.0，而且在 0.57 的教程里我并没有看到 Python 的安装以及路径，因为怕之后的环境冲突，所以没装 PS：这里需要提醒的是…官网的教程默认是最新版，你要按需手动切换版本号 不一样的版本号教程有点不一样，对没错就是 Python2 以及 Android Studio 一些东西不一样，有些版本详细，有些版本简陋（手动微笑） Hello World尝试新东西肯定是从最开始的学起，咔咔咔按照教程的配置完，然后 react-native run-android，嗯？忘了打开 Android Studio，哦对了要等 Gradle 构建完成才行 重新插入手机，使 Android Studio 识别，然后继续 react-native run-android，嗯？红屏报错 make sure your bundle is packaged correctly or you&#39;re running a packager server，提示找不到 Node 服务器。官网的教程里有解决方案，在真机运行时，需要通过 adb reverse tcp:8081 tcp:8081 命令指定端口，端口具体无所谓，别被占用都行… 指定完端口，重新运行就没问题了，通过 RR 动态修改代码后显示，体验真的不错… 高级折腾 React Native 的主要目的是跑起来搭档给我的工程 编译问题Gradle 是 2.14 版本的，可能是从 GitHub 很久之前的仓库下的，下载了 Gradle，折腾了小半天，把报错啥的解决了，Gradle 终于 Build 正常了… 接着重新运行还是没找到服务器，很绝望… 尝试解决 下载 AVD我是个有强迫症的人，容不得 C 盘有乱七八糟的东西，但是没办法，然而还是找不到服务器… 夜神模拟器可能还是端口的问题 解决方案react-native run-android 这条命令是真的坑，询问同伴之后，换成了 react-native start，插上真机，然后手动去 Android Studio 右上角运行，撒花完结… 总结 遇到问题多谷歌 多询问爬过坑的小伙伴 不要自己没玩过就推荐给别人，看和自己动手是两回事]]></content>
      <categories>
        <category>日常记录</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>总结</tag>
        <tag>ReactNative</tag>
        <tag>Android</tag>
        <tag>Node</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo Next 博客自定义配置]]></title>
    <url>%2FHexo-Next-Custom%2F</url>
    <content type="text"><![CDATA[前言首先说声抱歉，这是一篇亏欠很久的教程，因为我 QQ 群的一些朋友们经常问我，你博客的那些自定义是怎么弄的？其实大部分是我谷歌的，并不是我自己的方法。当然也有一部分是我自己手动写的，比如我的友链。 准备这篇博客并没有划定适宜人群，只是希望你可以通过此篇教程找到适合你的配置，或者通过我的博客找到一些灵感。这就是这篇教程的意义。 另外，需要说明的是，我的博客是 Next 6.3 版本，也没有采用数据文件夹的形式。为什么呢？因为一开始我不知道 什么？你不知道 Hexo ？来来吃我一发安利 约定 如果修改方法很多，我会以 • 方式区分，分步骤则为数字 文件路径写在了代码块上部 仔细看清站点配置文件和主题配置文件 博客文件目录为 root 目录，即包括你的 themes/ 、source/ 文件夹等 效果图在每个教程最开头如果没有就是上面几张显示了不想重复或者是单纯地忘记截了… 个性化配置修改打赏文字抖动 修改文件 themes\next\source\css\_common\components\post\post-reward.styl ，将 hover 注释即可 可以在配置文件中添加重叠样式（推荐） themes\next\source\css\_custom\custom.styl1234//二维码不抖动#wechat:hover p, #alipay:hover p &#123; animation: none;&#125; 修改打赏按钮 在文件中添加代码 themes\next\source\css\_custom\custom.styl123456789101112131415161718192021//打赏按钮修改#rewardButton span &#123; height: 35px; width: 35px; //line-height:30px; font-size: 15px; font-family: "PingFang SC", "Microsoft YaHei", Georgia, sans-serif; background: #34495e; border-radius: 5px; -webkit-box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24); -moz-box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24); box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24); transition: 0.2s ease-out; &amp;:hover &#123; background: #649ab6; -webkit-box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19); -moz-box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19); box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19); &#125;&#125; 修改文件，将打赏字样改为 themes\next\languages\zh-CN.yml1234reward:donate: &lt;i class="fa fa-qrcode fa-2x" style="line-height:35px;"&gt;&lt;/i&gt;wechatpay: 微信支付alipay: 支付宝 修改 busuanzi 统计功能 主题配置文件中 busuanzi 项目增加 123456789101112busuanzi_count:enable: truesite_uv: true #total visitorssite_uv_icon: usersite_uv_header: 访问用户：site_uv_footer: 人site_pv: true #total viewssite_pv_icon: eyesite_pv_header: 访问次数：site_pv_footer: 次post_views: truepost_views_icon: eye swig 变更为 themes\next\layout\_third-party\analytics\busuanzi-counter123456789&lt;i class=&quot;fa fa-&#123;&#123; theme.busuanzi_count.site_uv_icon &#125;&#125;&quot;&gt;&lt;/i&gt;&amp;nbsp &#123;&#123; theme.busuanzi_count.site_uv_header &#125;&#125; &lt;span class=&quot;busuanzi-value&quot; id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt; &#123;&#123; theme.busuanzi_count.site_uv_footer &#125;&#125; &lt;i class=&quot;fa fa-&#123;&#123; theme.busuanzi_count.site_pv_icon &#125;&#125;&quot;&gt;&lt;/i&gt;&amp;nbsp &#123;&#123; theme.busuanzi_count.site_pv_header &#125;&#125; &lt;span class=&quot;busuanzi-value&quot; id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt; &#123;&#123; theme.busuanzi_count.site_pv_footer &#125;&#125; PS: busuanzi 因为在 2018.10.12 左右七牛云域名过期，导致无法显示人数，如果你的主题是旧版本，请在第二步的文件中更新为 src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot; 给文章底部加星星虽然是异步，但访问速度太慢，经常加载不出来 在主题配置文件中搜索 rating 即可 点击此链接注册账号，设置站点后，点击左侧设置， site 建议选私人，rate 选择颜色保存即可 复制 ID 到配置文件，选择颜色 添加代码，搜索 rating，对比代码 blog\themes\next\layout\_macro\post.swig123456 &#123;% if theme.rating.enable %&#125; &lt;div class=&quot;wp_rating&quot;&gt;+ &lt;div style=&quot;color: rgba(0, 0, 0, 0.75); font-size:13px; letter-spacing:3px&quot;&gt;(&amp;gt;看完记得五星好评哦&amp;lt;)&lt;/div&gt; &lt;div id=&quot;wpac-rating&quot;&gt;&lt;/div&gt; &lt;/div&gt; &#123;% endif %&#125; 修改文章底部留白添加如下代码 themes\next\source\css\_custom\custom.styl123456.post-widgets &#123; padding-top: 0px;&#125;.post-nav &#123; margin-top: 30px;&#125; 侧边栏近期文章 原理：去除友链，将友链换成近期文章 添加如下代码： themes\next\layout\_custom\sidebar.swig12345678910111213141516&#123;% if theme.recent_posts %&#125; &lt;div class="links-of-blogroll motion-element &#123;&#123; "links-of-blogroll-" + theme.recent_posts_layout &#125;&#125;"&gt; &lt;div class="links-of-blogroll-title"&gt; &lt;i class="fa fa-history fa-&#123;&#123; theme.recent_posts_icon | lower &#125;&#125;" aria-hidden="true"&gt;&lt;/i&gt; &#123;&#123; theme.recent_posts_title &#125;&#125; &lt;/div&gt; &lt;ul class="links-of-blogroll-list"&gt; &#123;% set posts = site.posts.sort('-date') %&#125; &#123;% for post in posts.slice('0', '5') %&#125; &lt;li&gt; &lt;a href="&#123;&#123; url_for(post.path) &#125;&#125;" title="&#123;&#123; post.title &#125;&#125;" target="_blank"&gt;&#123;&#123; post.title &#125;&#125;&lt;/a&gt; &lt;/li&gt; &#123;% endfor %&#125; &lt;/ul&gt; &lt;/div&gt;&#123;% endif %&#125; 在主题配置文件中配置 123recent_posts_title: 近期文章recent_posts_layout: blockrecent_posts: true 复制文本添加版权信息 在 themes\next\source\js\src 新建 copy.js，代码如下： 1234567891011121314151617181920212223function addLink() &#123; var body_element = document.body; var selection; selection = window.getSelection(); if (window.clipboardData) &#123; // Internet Explorer var pagelink ="\r\n\r\n 原文出自[ Yi-Yun博客 ](yi-yun.github.io) \n除特别声明外，均采用CC BY-NC-SA 4.0许可协议\n转载请保留原文链接: "+document.location.href+""; var copytext = selection + pagelink; window.clipboardData.setData ("Text", copytext); return false; &#125; else &#123; var pagelink = "&lt;br/&gt;原文出自[ Yi-Yun博客 ](yi-yun.github.io)&lt;br/&gt;除特别声明外，均采用 CC BY-NC-SA 4.0 许可协议&lt;br/&gt;转载请保留原文链接: "+document.location.href+""; var copytext = selection + "&lt;br/&gt;"+pagelink; var newdiv = document.createElement('div'); newdiv.style.position='absolute'; newdiv.style.left='-99999px'; body_element.appendChild(newdiv); newdiv.innerHTML = copytext; selection.selectAllChildren(newdiv); window.setTimeout(function() &#123; body_element.removeChild(newdiv);&#125;,0); &#125; &#125; document.oncopy = addLink; 在 next\layout\_layout.swig 文件中，添加引用（注：在swig末尾添加）： 1&lt;script type="text/javascript" src="/js/src/copy.js"&gt;&lt;/script&gt; 添加 DaoVioce很多灵感都是逛博客获得的 注册首先在 DaoVoice 注册个账号，点击-&gt;邀请码是 cbaf2df2。 获取 app_id点击左侧应用设置-&gt;安装到网站在代码中找到 app_id 修改head.swig在themes\next\layout\_custom\head.swig添加如下代码 123456789&#123;% if theme.daovoice %&#125; &lt;script&gt; (function(i,s,o,g,r,a,m)&#123;i["DaoVoiceObject"]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset="utf-8";m.parentNode.insertBefore(a,m)&#125;)(window,document,"script",('https:' == document.location.protocol ? 'https:' : 'http:') + "//widget.daovoice.io/widget/0f81ff2f.js","daovoice") daovoice('init', &#123; app_id: "&#123;&#123;theme.daovoice_app_id&#125;&#125;" &#125;); daovoice('update'); &lt;/script&gt;&#123;% endif %&#125; 修改主题配置文件文件末尾添加如下代码123# Online contactdaovoice: truedaovoice_app_id: # 这里填你刚才获得的 app_id 至此，网页的在线联系功能已经完成，hexo s 可查看页面，窗口和位置可自行配置 聊天窗口配置我的配置 绑定微信在用户界面点击右上角头像即可扫码绑定，即时通信可在微信小程序中 添加吉祥物 安装依赖 12npm install --save hexo-helper-live2dnpm install --save live2d-widget-model-wanko 站点配置 12345678910111213141516171819202122# hexo-helper-live2d配置，参考https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.mdlive2d:enable: truescriptFrom: localpluginRootPath: live2dw/pluginJsPath: lib/pluginModelPath: assets/tagMode: falsedebug: falsemodel: scale: 1 use: live2d-widget-model-wankodisplay: superSample: 2 # 超采样等级 width: 100 height: 100 position: left # 位置mobile: show: falsereact: opacityDefault: 0.9 # 默认透明度 opacityOnHover: 0.5 # 鼠标移上透明度 网页标题崩溃欺骗 添加 JavaScript 代码在 themes\next\source\js\src 文件夹下创建crash_cheat.js，添加代码： 12345678910111213141516var OriginTitle = document.title;var titleTime;document.addEventListener('visibilitychange', function () &#123; if (document.hidden) &#123; $('[rel="icon"]').attr('href', "/img/TEP.ico"); document.title = '╭(°A°`)╮ 页面崩溃啦 ~'; clearTimeout(titleTime); &#125; else &#123; $('[rel="icon"]').attr('href', "/favicon.ico"); document.title = '(ฅ&gt;ω&lt;*ฅ) 噫又好了~' + OriginTitle; titleTime = setTimeout(function () &#123; document.title = OriginTitle; &#125;, 2000); &#125;&#125;); 引用在themes\next\layout\_layout.swig文件中，添加引用（注：在swig末尾添加）：1&lt;script type="text/javascript" src="/js/src/crash_cheat.js"&gt;&lt;/script&gt; 文末添加结束标记themes\next\layout\_macro\passage-end-tag.swig12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;-------------本文结束&lt;i class="fa fa-paw"&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 修改网页底部的桃心更改主题配置文件中的图标名字即可 1234icon: name: user animated: true color: "#808080" 透明找到自己相应的 Scheme 下的相关文件，我的是 Piscesthemes\next\source\css\_schemes\Pisces\_layout.styl 背景.content-wrap 菜单栏.header-inner themes\next\source\css\_schemes\Pisces\_sidebar.styl 侧边栏.sidebar-inner 找到 background属性更改为 background: rgba(255,255,255,0.7) 即为透明度30%的白色 更改 sidebar 大小找到 themes\next\source\js\src\util.js 1234function updateSidebarHeight(height) &#123; height = height || 'auto'; $('.site-overview, .post-toc').css('max-height', height); &#125; 可在 height 后加50 底部加上运行时间在 hexo\themes\[your theme]\layout 文件夹下找到你的 footer 文件 123456789101112131415161718192021222324252627&lt;span id="timeDate"&gt;载入天数...&lt;/span&gt;&lt;span id="times"&gt;载入时分秒...&lt;/span&gt; &lt;script&gt; var now = new Date(); function createtime() &#123; var grt= new Date("02/14/2018 12:49:00"); //此处修改你的建站时间或者网站上线时间 now.setTime(now.getTime()+250); days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); if(String(hnum).length ==1 )&#123; hnum = "0" + hnum; &#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); mnum = Math.floor(minutes); if(String(mnum).length ==1 ) &#123; mnum = "0" + mnum; &#125; seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = "0" + snum;&#125; document.getElementById("timeDate").innerHTML = "本站已安全运行 "+dnum+" 天 "; document.getElementById("times").innerHTML = hnum + " 小时 " + mnum + " 分 " + snum + " 秒";&#125; setInterval("createtime()",250); &lt;/script&gt; 鼠标爆炸特效 下载这个脚本，放在 themes\next\source\js\src 修改代码 themes\next\layout\_layout.swig12345&#123;% if theme.fireworks %&#125;&lt;canvas class="fireworks" style="position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;" &gt;&lt;/canvas&gt; &lt;script type="text/javascript" src="//cdn.bootcss.com/animejs/2.2.0/anime.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="/js/src/fireworks.js"&gt;&lt;/script&gt;&#123;% endif %&#125; 打开主题配置文件，在里面最后写下： 1fireworks: true SEO看个人喜好修改，不一定要改的一模一样 首页title优化更改 index.swig 文件 themes\next\layout 123&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; &#123;% endblock %&#125;&#123;% block title %&#125; &#123;&#123; theme.keywords &#125;&#125; - &#123;&#123; config.title &#125;&#125;&#123;&#123; theme.description &#125;&#125; &#123;% endblock %&#125;&#123;% block title %&#125;&#123;&#123; theme.description &#125;&#125;-&#123;&#123; title &#125;&#125;&#123;% if theme.index_with_subtitle and subtitle %&#125; – &#123;&#123; subtitle &#125;&#125;&#123;% endif %&#125;&#123;% endblock %&#125; 修改文章链接编辑站点 _config.yml 文件，修改其中的 permalink 字段改为 permalink: :title.html 即可。 添加“nofollow”标签 修改代码 \themes\next\layout_partials\footer.swig12&#123;&#123; __('footer.powered', '&lt;a class="theme-link" href="http://hexo.io" rel="external nofollow"&gt;Hexo&lt;/a&gt;') &#125;&#125;&lt;a class="theme-link" href="https://github.com/iissnan/hexo-theme-next" rel="external nofollow"&gt; 同理，sidebar.swig也作如下修改 12&lt;a href="http://creativecommons.org/licenses/&#123;&#123; theme.creative_commons &#125;&#125;/4.0" class="cc-opacity" target="_blank" rel="external nofollow"&gt;&lt;a href="&#123;&#123; link &#125;&#125;" target="_blank" rel="external nofollow"&gt;&#123;&#123; name &#125;&#125;&lt;/a&gt; 推荐工具 Visual Studio Code Chrome 浏览器（不接受反驳） 博客图床解决方案 参考链接很久以前的事情了…有些参考链接找不到了，有侵权的请联系我补。 打造个性超赞博客 Hexo + NexT + GitHub Pages 的超深度优化 Hexo NexT 博客增加知乎豆瓣图标支持 Easy Hexo]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>配置笔记</tag>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>GitHub</tag>
        <tag>Blog</tag>
        <tag>Custom</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[强迫症对 CRLF 和 LF 的执念]]></title>
    <url>%2FCRLF-vs-LF%2F</url>
    <content type="text"><![CDATA[介绍 CRLF 以及 LF 是用来表示文本换行的方式。CR(Carriage Return)代表回车，对应字符\r；LF(Line Feed)代表换行，对应字符\n由于历史原因，不同的操作系统文本使用的换行符各不相同。主流的操作系统一般使用 CRLF 或者 LF 作为其文本的换行符。其中，Windows 系统使用的是 CRLF，Unix 系统(包括 Linux，MacOS 近些年的版本)使用的是 LF。 问题的由来各个系统间的这个换行差异让我这个强迫症饱受摧残。虽然至今并发生没有什么大问题，但是当你 Git 提交的文件更改是重新删除文件，再插入的时候，让强迫症的我很难受，更重要的是无法直接查看修改。 原因发现问题的没有头绪第一时间当然谷歌了。这一谷歌不得了，发现这个回车是挺坑的。 Git 的 Windows 客户端在安装时会有如下图这样的提示这是 Git 的自动转换，当你在签出文件时，Git 试图将 UNIX 换行符(LF)替换为 Windows 的换行符(CRLF)；当你在提交文件时，它又试图将 CRLF 替换为 LF，所以才会改变整行。 不过可喜的是，据说新版本的 Git 已经修复了这个功能（并没有亲测），而且我并没有找到相关的证据。另外，也有很多人用的老版本的。 解决方案设置 Git(重要)不管怎样，先设置在 Git 终端里敲下这两条命令12git config --global core.autocrlf falsegit config --global core.safecrlf true 一般敲完这两条就可以洗洗睡了~ 下面是身为强迫症晚期的习惯 编辑器统一将我 Windows 下的编辑器以及 IDE 统一为 Unix(/n)以及 UTF-8 的风格(什么？Arch 里也要变？你火星来的吧) .editorconfig神器，保存时会自动格式化内容 使用去他的官网看编辑器以及 IDE 是否原生支持 .editorconfig，不自带需要安装插件，然后在工程目录下直接扔下这个文件完事123456789101112root = true[*]charset = utf-8end_of_line = lfinsert_final_newline = truetrim_trailing_whitespace = trueindent_style = spaceindent_size = 2[*.py]indent_size = 4 特别说明原先是 CRLF 的文件第一次更改还是会全部删除后插入，但是之后提交就不会了 参考GitHub Issue]]></content>
      <categories>
        <category>代码协作</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>个人</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java 反射]]></title>
    <url>%2FJavaReflect%2F</url>
    <content type="text"><![CDATA[前言反射应用在一些通用性比较高的代码，后续学框架或多或少是有反射的。一开始反射看不懂没关系，但要有初步印象。我是通过后来的框架的学习才明白反射真牛！ 原理 开发时，框架大都用过配置文件来配置。在配置文件中配置了类，可以通过反射得到类的所有内容，还可以让类中的某个方法来执行 什么玩意？ 说白了就是告诉你一个路径，你能获取整个类里的内容。那么，类里的内容包括什么呢 构造器 属性 方法 代码准备一个测试类123456789101112131415161718192021package com.yiyun.excrice.Reflect;public class Person &#123; private int id; private String name; private Person(int id, String name) &#123; this.id = id; this.name = name; &#125; public Person() &#123; &#125; public void eat(String something)&#123; System.out.println("正在吃" + something); &#125; private void speak(String message)&#123; System.out.println("正在说" + message); &#125;&#125; 构造器1234567891011121314151617181920public class testReflect &#123; public static void main(String[] args) throws Exception &#123; //获取Class 对象 Class clazz=Class.forName("com.yiyun.excrice.Reflect.Person"); //获取一个实例， jdk9中已过时 Object obj=clazz.newInstance(); System.out.println("obj = " + obj); //因为权限是私有，但getConstructor()只能获取public修饰的方法getDeclaredConstructor():获取声明的方法。只要声明的就可以 Constructor&lt;?&gt; constructor=clazz.getDeclaredConstructor(int.class,String.class); System.out.println("constructor = " + constructor); //newInstance会产生非法访问异常：java.lang.IllegalAccessException constructor.setAccessible(true);// 暴力反射私有构造器 Object obj1=constructor.newInstance(1,"lisi"); System.out.println("obj1 = " + obj1); &#125;&#125; 方法12345678910111213@Testpublic void methodTest() throws Exception&#123; //得到类对象（可以想象成模板，有了模板你才能去造其他东西） Class clazz=Class.forName("com.yiyun.excrice.Reflect.Person"); //得到声明的方法 Method method=clazz.getDeclaredMethod("speak",String.class); method.setAccessible(true);//暴力反射 //这个方法需要一个实例 // 静态方法不用，因为即使不 new 对象也可以调用，所以当执行静态方法时设置为 null也可以 method.invoke(clazz.newInstance(),"hello,yi-yun");&#125; 属性12345678910111213@Testpublic void fieldTest() throws Exception&#123; //获取Class 对象 Class clazz=Class.forName("com.yiyun.excrice.Reflect.Person"); Field field=clazz.getDeclaredField("name"); field.setAccessible(true); Object obj=clazz.newInstance(); field.set(obj,"yi-yun"); System.out.println("obj = " + obj);&#125; 补充暴力反射以下都是摘自于极客时间《Java核心技术36讲》 框架运用反射能给实体类在运行时生成 set/get 的方法 绕过 API 访问限制 但是在 Java9 以后，这个方法的使用可能会存在一些争议，因为 Jigsaw 项目新增的模块化系统，出于强封装性的考虑，对反射访问进行了限制。Jigsaw 引入了所谓 Open 的概念，只有当被反射操作的模块和指定的包对反射调用者模块 Open，才能使用 setAccessible；否则，被认为是不合法（illegal）操作。如果我们的实体类是定义在模块里面，我们需要在模块描述符中明确声明：1234module MyEntities&#123; //open for reflection opens com.mycorp to java.persistence;&#125; 总结其实，思路很简单 先获取 Class 对象 通过 Java 内置的方法以及 Class 对象去得到操作类的方法或属性名 操作上面一步得到的东西，得到你想要的结果]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>Java</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018 年终总结]]></title>
    <url>%2Ffinal2018%2F</url>
    <content type="text"><![CDATA[回顾人生中的第一篇年度总结，此时窗外飘着小雪，突然有想寻找未来另一半的冲动 学习技术树莓派很幸运，在去年九月份社团交接上，学长把树莓派作为礼物送给了我，也终于在寒假开启了心心念念了很久的树莓派之旅，以至于嵌入式课上无法在实验室连接树莓派时，我的方案取得了老师以及同学们的认同。 但这次折腾树莓派收获到最深的观念是，免费的是最贵的。内网穿透折腾了一个多礼拜勉强弄好，但并没有被我投入使用，原因免费的太慢。大概都有这么一个怪圈，刚开始免费的东西，方便快捷，然后用的人多，然后变卡… 项目 校创做的共享单车，不过做了一半…那时候 ofo 还很火呢，可惜现在就是烂摊子 国创智能手环，答辩的时候跟信电的一组项目撞上了，抽签还是前后组…答辩的时候没有意识到评委与上一组对比的潜台词，说完以后才意识到。虽然通过了，但争取说明对比一下可能分数会高点。 全沾工程师大概有八九个月，在了解技术吧或者更准确点是，都接触了解了一遍，但没有深入。换句话说，没干正经事。 硬件有了嵌入式、计算机组成原理这种课的铺垫，了解并不能难。很遗憾的是没有把 CSAPP 这本书看完，暑假抽空看的前几章，相见恨晚 前端主要是七月底搭建了个人博客。为了让自己界面好看一点，学习了 html、css、js ，魔改了静态博客页面。还认识了一些大佬，我博客的友链全是hhh 后端Java Web 相关的知识，具有初步知识，目前正在学框架 网络看完了《网络是怎样连接的》，这本书前面的基础知识讲得很好，但是后面的内容由于我水平没跟上，就很快的略过了。不过之前有过学校网络管理以及平常此类属的积累，让我能很轻松面对下半年的计算机网络以及实验的课程 Linux暑假装了 Arch Linux ，只能说它真的很牛逼，没有之一。你体验过一行命令就能安装 QQ、TIM、微信、迅雷、百度云么？如果想，Arch 绝对不会让你后悔。我还特别喜欢他的宣传口号，“用户友好都是狗屁，用户中心才是王道”。 Arch 具有全宇宙最丰富 Linux 文档以及社区，生态超级棒 虽然玩了大半年，还是在 11 月左右确定了走 J2EE 的线路，一是后端多少年来的稳定，二是个人认为未来是人工智能物联网大数据的年代，走服务端会有更多的机会 认知开源这是程序员的天堂，真正让我体会到开源力量的是 Arch Linux 的 Aur。大概可以理解为，开发者以及使用者为开源软件提供在 Arch Linux 平台上的支持 我在开源平台上也认识了很多朋友。说出来你们可能不信，年龄有11岁的六年级小朋友，在我友链里静静的躺着。还有几位虽然素不相识，但是在我今年成长的路上给出了很多宝贵的建议 不过也不能完全信开源的，这不刚刚爆出来 ant-design 的圣诞节彩蛋么。还有 NPM 爆出的后门么2333 知识付费很多人说，2016 年是知识付费的元年，但是我表示 2016 年我才高中毕业，崇尚互联网时代万物皆可免费的概念，这也让我之后的学习或者交流过程中吃了很多亏 知识星球不过后来也不知道怎么想，可能是打折吧。在暑假加入了几个知识星球，结果发现那里大都是比自己牛逼、学习比自己刻苦、来自各行各业的大牛，跟着他们发的帖子，学到了很多东西 IDEA很遗憾的是，虽然他也很认同知识付费以及有些人宁愿花钱买游戏也不会买几本书看的观点，在系统开发设计课上提出的校园知识付费以及经验付费的 idea 被老师否决了。可能后续缺乏自己的思考以及没有考虑到推行难度，不过在过程中我还是了解到了很多分答 App 之前的问题。 互联网造成贫富差距的其实就是互联网信息差。上层的一点点风吹草动，最先知道的是富人，等到大众接到消息的时候，黄花菜都凉了…也从某一层面导致了富人越富穷人越穷 上系统开发的时候，老师只是稍微提了一句现在经济不太好。但这一句，我在两个月前，在知识星球里就看到了。然后在他说完这句话后的那个礼拜，就爆出新闻蘑菇街的股权被稀释了… 虽然可能贸易战会影响明年的春招以及秋招，但我很喜欢这句话 如果行业发展稳健，对于成本、效率、生产力等自然不敏感，如果行业高速发展，这些甚至会被忽略，一旦等到行业不景气，这些是不得不重视的问题，甚至会催生更优质的公司与个人，市场会迎来新的机遇。 “Never waste a good recession.（不要浪费一个好的衰退期）” 人脉真正的人脉不是微信好友位，而是成年人之间的价值交换。没有自己的价值，何来人脉。虽然残酷，但很现实。 财富年初想投点指数基金。想接触更多的领域，虽然计划未来有很长的时间在互联网领域，但我还是想初涉其他领域，成长的学费交的越早越好。 展望 等着一条条变为真香 自律2018 年无法利用碎片化时间，虽然设置了免打扰，手总是禁不住诱惑去碰手机 不能再一个月更新一次博客了…先立个 flag ：一星期两到三篇有输入必须有输出，即使是嗟来之食，也要转化为自己的东西 算法大一大二埋下的还是得自己填 春招寻找暑期实习 秋招既然决定不考研，这是最后的稻草]]></content>
      <categories>
        <category>总结</category>
      </categories>
      <tags>
        <tag>个人</tag>
        <tag>总结</tag>
        <tag>收获</tag>
        <tag>未来</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Spring 学习笔记（一）]]></title>
    <url>%2FSpringlearn%2F</url>
    <content type="text"><![CDATA[前言个人笔记，理解有误请指正 基础理解 控制反转个人理解是将类通过 XML 或者其他形式的配置交给 Spring 管理，而 Spring 通过 Java 的反射机制在运行时进行统一的创建和组装 注入依赖设置属性 1234&lt;bean id="test" class="com.yiyun.Spring.Ioc.HelloWord"&gt; &lt;!--注入数据找 set 方法--&gt; &lt;property name="hostname" value="Michael"&gt;&lt;/property&gt;&lt;/bean&gt; 元数据初涉Spring IoC 容器是通过读取配置文件中的元数据来管理 Bean 对象 配置元数据的三种方式 XML Annotation Java Config 反射Java 中最重要的概念,下面代码为模拟 Spring IoC 容器管理 Bean 的方法123456789101112131415161718192021void fun1() throws Exception &#123; //IoC 原理（Reflect） String path="com.yiyun.Spring.Ioc.HelloWord"; HelloWord world=null; //-----Spring--------- Class clazz=Class.forName(path);//反射获得字节码 Constructor con=clazz.getConstructor(); con.setAccessible(true);//可访问的 Object o=con.newInstance(); BeanInfo beanInfo=Introspector.getBeanInfo(clazz,Object.class);//内省机制 PropertyDescriptor[] pds=beanInfo.getPropertyDescriptors(); for (PropertyDescriptor ps:pds) &#123; String proper=ps.getName();//获取类中的所有属性 if("hostname".equals(proper))&#123; ps.getWriteMethod().invoke(o,"yi-yun");//调用 Set 方法 &#125; &#125; world=(HelloWord)o; // world.sayHello(); &#125; 配置相关 bean 中 的 id name 在 Spring3.1 之后都是 String 类型,可以用 / 开头 import 相关 &lt;import resource=&quot;classpath:com/yiyun/Spring/Ioc/IoC.xml&quot;/&gt; 默认从 classpath 下找 只有在框架中实现了 Resource 接口才能识别 file 或 classpath 等 测试 传统测试需要开闭 Spring 并且非正常关闭 框架内测试Spring5 的测试框架是依赖 Junit5,建议用这个快捷方便 123@SpringJUnitConfig//按照测试类路径下，找测试类-context.xml@Autowired//自动按照类型去 Spring 寻找 bean 对象,并设置给该字段@Test IoCIoC 容器 不建议用 BeanFactory，而是用 ApplicationContext，它继承了 BeanFactory，提供 AOP 集成、国际化处理、事件传播、同一加载等功能 12345678910111213141516@Testpublic void fun()&#123; Resource resource=new ClassPathResource("com/yiyun/Spring/IoC/App.xml"); BeanFactory beanFactory=new XmlBeanFactory(resource); System.out.println("-----------------------------"); Person p=beanFactory.getBean("test",Person.class); System.out.println(p);&#125;@Testpublic void fun1() &#123; ApplicationContext ctx=new ClassPathXmlApplicationContext("com/yiyun/Spring/IoC/App.xml"); System.out.println("-----------------------------"); Person p=ctx.getBean("test",Person.class); System.out.println(p);&#125; Bean 创建时机 BeanFactory 有延迟初始化（懒加载）的特点，在创建容器时，不会立马去创建容器中管理的对象，去获取时才会去创建对象 ApplicationContext 会立马初始化 Bean Bean 四种实例化 构造器实例化（需要无参数构造器，与访问权限无关），最标准，使用最多 静态工厂方法实例化 实例工厂方法实例化 实现 Factory Bean 接口实例化，集成框架使用，例如 MyBatis : org.mybatis.spring.SqlSessionFactoryBean -注： BeanFactory 强调 Bean 工厂，FactoryBean 强调工厂对象 Bean 的作用域默认单例，prototype 为多例，即创建三次且 HashCode 不一样 Struct1 的 Action 使用的 request，Struct2 的 Action 使用 prototype 类型，其他使用单例 实例化和销毁 init-method destroy-method 细节：多例模式并不会像单例模式一样去销毁，需要手动销毁，调用 close （美其名曰：节约资源）。另外，不用 Spring 测试框架的话，资源不会被正常释放，Spring 容器没有正常关闭，需要手动关闭。 采用 Lombok @cleanup 注解释放资源 把 Spring 线程作为 JVM 的子线程registerShutdownHook()]]></content>
      <categories>
        <category>Spring</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>Java</tag>
        <tag>Spring</tag>
        <tag>IoC</tag>
        <tag>AOP</tag>
        <tag>框架</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL 安装配置]]></title>
    <url>%2FMySQL-Install%2F</url>
    <content type="text"><![CDATA[前言扯淡：从开始想的一周一更变成了一月一更······ 此篇博客记录 Windows10 下的 MySQL 安装以及爬坑过程。我们安装的 MySQL 版本是 mysql-essential-5.6.0-m4-win32，就安装的每个步骤，说明每个对应选项的内容。 安装注意要以管理员身份运行！！！ License Agreement 打钩，Next 选择安装目录，可以点击 Change 自主修改，比如E:\Program Files (x86)\MySQL\MySQL Server 5.6\ 点击 Install，安装结束后，打钩 Configuration Wizard，开始配置数据库 配置 配置类型选择 Detailed Configuration 选项 机器类别选择，开发模式 Developer Machine 选择 Multifunctional Database，Next 设置 Tablespace 的目录到 E 盘的\MySQL Datafiles\ Server Instance 设置为 Manual Setting 默认数值15 数据库的端口默认为 3306 Character Set 默认设置为 Standard Character SetPS：涉及编码问题，后面会讲，可先设置为标准 Service 名称默认为 MySQL，并且将可运行程序的目录包含在 PATH 目录中 数据库根用户的密码设置，即安装数据库后的第一个用户的密码设定，类似于 Windows 安装时的 root 用户密码设定 数据库配置设定完毕后，点击 Execute 后，进行配置 常用命令介绍 登录以管理员身份运行 CMD 或者 PowerShell，输入 mysql -u root -p，在接下来输入刚刚设定的密码即可进入控制台因为是以管理员身份安装的，所以要以管理员身份运行数据库。个人猜测跟环境变量有关。 查看数据库show databases; 选择数据库use 数据库名字; 查看数据库中的表show tables; 问题假死在最后一步执行 Excute 的时候会发生假死现象，原因是没有以管理员身份运行或者是 Win10 的版本兼容性问题。 解决方案：不用卸载，安装好了，只是配置的时候卡了。个人建议先等，如果等了十多分钟还没好，去安装目录下找到 MySQLInstanceConfig.exe 这个程序右键以管理员身份运行重新配置。 编码如果按照上面来的话，默认编码时拉丁文，拉丁文不支持中文字符。这个编码问题不处理好，会为之后的学习造成很大的影响（我就是其中一个） 原理：Windows 最蛋疼的点是它的终端是 gbk 编码，什么你要改成 utf-8 编码？不存在的！对，没错，我知道终端右键设置能改，但是没啥用重启环境变量后还是 gbk，所以还要改注册表。你不如直接修改数据库的客户端编码呢! 解决方案：找到 MySQL 安装目录下的 my.ini 文件，修改对应的编码12character-set-server=utf8default-character-set=gbk 还不行的话请看编码问题视频 点我下载]]></content>
      <categories>
        <category>win 配置</category>
      </categories>
      <tags>
        <tag>配置笔记</tag>
        <tag>软件</tag>
        <tag>MySQL</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git 使用]]></title>
    <url>%2FGit%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[写在前面主要是简单的 Git 命令介绍，初衷是看完这篇文章能直接上手在 GitHub 上 New pull request 进行项目开发 多平台初始化极其重要，不然 merge 时代码会很乱 编辑器改成（UX）模式 换行符采用 LF UTF-8 编码 Git 命令行配置 git config --global core.safecrlf true git config --global core.autocrlf false 原因见链接 多人协作本文采用的是 pull request 的方式，因为这样可以进行 code review Fork 源仓库点击 Fork 按钮将项目复制到自己的仓库 拉取本地仓库用 git clone 项目地址 到自己电脑上，嫌慢的朋友见这里 开发你可以在 master 分支上开发，也可以再新建一个 dev 分支（看项目大小以及简易程度）开发完以后，git add . &amp;&amp; git commit -m &#39;注释&#39; &amp;&amp; git push 创建合并请求打开网页进入 Fork 的项目，然后点击 New pull request，最后点击 Create pull request 按钮，添加一段注释，源仓库的管理员就能收到你的请求 同步如果过了一礼拜作者或其他人员对仓库的代码进行了修改，源代码变了，你本地的代码还是前几天的。这时候你需要使用 Git 命令 git fetch 源仓库地址 master:分支名 （分支名自己取，不建议直接拉取到主分支），然后 git merge 分支名 即可同步代码（有冲突就处理冲突） 一些小技巧设置代理GayHub 被墙的厉害，这步以及下步没有代理的忽略 git config --global http.proxy &#39;socks5://127.0.0.1:1080&#39;git config --global https.proxy &#39;socks5://127.0.0.1:1080&#39; 因为访问 GitHub 走的代理，用 https 连接的主机提交会有点问题，可以使用 ssh 链接提交。更改主机连接方法点这里 取消代理git config --global --unset http.proxy git config --global --unset https.proxy 更改远程仓库指向 remote url git remote set-url origin yoururl git config -e 熟悉 vim 的朋友可以使用，最后记得保存（个人喜欢这种方式）]]></content>
      <categories>
        <category>代码协作</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>奇淫怪技</tag>
        <tag>配置笔记</tag>
        <tag>软件</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[可能是最佳的免费图床]]></title>
    <url>%2F%E5%9B%BE%E5%BA%8A%E7%9A%84%E9%80%89%E6%8B%A9%2F</url>
    <content type="text"><![CDATA[这张图仔细看，老司机可能深有体会 简介 网络相册，或叫在线相册，为运行、储存以及翻阅、分享于網際網路的相簿，由于在线相册不是实质 … 相册会给免费用户提供较少的月流量，成为付费用户之后，可外链流量将获得提升；也有网站专门提供免费外链服务（此类网站又称图床），不限流量。 –维基百科 换句话讲，图床是一种专门存储图片的地方，分享以链接的形式，应用于诸多场景，尤其是应用于博客图片的插入（可能我只有写博客的时候才用到图床）。不说100%，99% 写博客的人，都需要一个图床（稳不稳定另说），总不至于把图片放在站点的 src/image 目录下吧 图床平台目前主要分为两种 公共图床 SM.MS其实还不错，但公共的图床还是不舒服 微博图床说实话也还行，不过速度优化可能差点。 公共图床都有致命的缺点用的人多。哪天跑路了，你博客文章没图片显示都没地方哭去··· 自建图床 VPS自搭麻烦，并且采用这种方案意味着你不能重装 VPS 的系统… 七牛云需要实名认证，七牛图片分享链接的 ssl 按流量计费 又拍云也要实名认证，计费方式与七牛云相似，但可以通过加入又拍联盟可以拥有免费流量和容量听起来还不错吧，但是实名认证太坑了。需要手持身份证正面和手持身份证反面，注意是手持身份证反面！不是单纯的身份证反面！反正我没拍照上传的习惯···加上支付宝芝麻信用没过700，所以放弃了 综上，如果付费的话，七牛云挺好的且不贵。但不是不想当金钱的奴隶嘛，所以才有了此文 需求既不想做金钱的奴隶，又想有高质量的服务怎么办呢？所以就有了相应的需求 一定的免费空间以及流量 支持 SSL 访问速度 解决方案说实话，我当初找得快放弃了，仔细一想七牛云也不错而且便宜，何必要死心眼找免费的呢 腾讯云对象存储 只需绑定银行卡的 QQ 或者微信实名认证就可得到免费额度 文档丰富我还用 Python SDK 在 iOS 上写了图片上传的脚本呢 官网称，提供全球400+节点加速，支持SSL，支持防盗链，支持API调用之前在没找到好用的图床之前用的 SM.MS，用了腾讯云之后图片显示速度明显提升了（没有具体数据，可能心理作用？） 再来吹一下腾讯云对象存储（暗示腾讯云给广告费），对象存储不光能用在图床，传小型的视频也是极佳的选择，可以在博客里显示 还可以开 CDN 加速，对，你没有听错，可以给对象存储开 CDN 加速。当然只有每月免费的 10G，对小型不打算花钱的博客是极佳的选择 图床上传工具 PicGo在 GitHub 上的开源神器，全平台（Mac/Windows/Linux），使用 Wiki 丰富，上手简单，成功被圈粉 iPic很多人推荐，但恕我买不起 Mac··· 总结能用钱解决的事情真的不要花费时间去寻找免费的事，这次算是成功了，但下次呢？为了找好用免费的图床，时间浪费了起码有两三天。这也是文章开头图片的意义所在··· 参考文章嗯，图片就交给它了]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>图床</tag>
        <tag>对象存储</tag>
        <tag>工具推荐</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[win10 软件推荐（附下载链接）]]></title>
    <url>%2Fwin10%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[前言重装系统过的朋友肯定很头疼要安装哪些软件？很多都是之前网上找的，并没有保存安装包，导致后续有很多麻烦。 本篇文章主要为了解决这个问题，当然里面的软件也只是符合博主的个人口味，按需获取。 系统兼容性说明：博主大概率以后重装 win10 1803 专业版起步，有些软件兼容性不是很好，请自行在属性兼容性进行测试！ 驱动安装很多人仍使用的是 PE 包中的万能驱动，所谓万能并不是真正的“万能”，某些驱动在某品牌某型号电脑里不生效，偶尔还会蓝屏！当然那是属于驱动特别倒霉类型的！一般图省事，打万能驱动就完事了。 我还是比较推荐以下两款第三方驱动 驱动精灵虽然官网上下的软件有点流氓，具有开机占用 CPU、默默更新等一系列症状，但某大佬封装的去广告绿色版还是不错的 驱动人生老版本还行，新版本没用过，经常是我其他驱动打崩后的首选，表现还不错！ FAQ 问：win10 新版本不是会自动更新驱动么？为什么还要装驱动？答：没错，但博主曾经重装 1803 后，没有打驱动让其自动更新，导致触摸板驱动对于键盘上的按键没反应。重新安装也没有效果，结果一直到现在也没有解决。so,还是看脸··· office 与 win 激活理论上这个步骤应该在驱动安装完重启之后，因为驱动容易崩。 office个人比较喜欢 Office 2016 Professional Plus（名字看上去就跟别人不一样）。 既然装了就选高端点的版本,其实是版本少见，导致激活工具也难找。 激活很多激活工具说白了都是服务器，自己也可以搭，但有 180 天限制。但博主并不担心，因为我这台老电脑 win7 升 win10 已经绑定 oem 了，重装也不需要激活系统，只要激活 office 就行了. 神龙 kms运行前下载最新版并关掉杀软，会报毒，能激活 win 和 office，有广告，传言就三行代码，但无伤大雅且易一发入魂。不过好像也有激活时间限制，看脸。 数字权利激活链接是 GitHub 地址，对没错是开源的！不知道会不会被微软关掉。只能激活 win10 系统，前阵子才出的没用过，一直想抽空找虚拟机试试··· 软件彩蛋：先安装这个 浏览器 Chrome毫无争议，程序员必备，偶尔因为缓存问题用一下系统自带的 Edge 浏览器 UWP不得不说，UWP 是微软的败笔。虽然本意是想模仿苹果的 AppStore,但最后还是缺乏管理，导致垃圾应用泛滥。不过，话说回来，有几个还是不错的。 网易云音乐去除了安装版的笨重、Bug少，虽然不能后台播放，但个人认为这是 UWP 最好的应用，没有之一 有道词典比安装版的好太多，直接复制翻译，还支持文章翻译 中国大学慕课不喜欢看网页的人可以试试这个，还不错 邮件貌似是系统自带的应用，可以收发信，但我偏爱 iOS 上的 QQ 邮箱，没有用电脑处理邮件的习惯。 杀毒微软自家的 Windows Defender 已无力吐槽，还是因为是上文提到的 UWP 应用，不稳定极了！装一些破解的时候，明明显示关掉的还是会报毒，加白名单的也报毒··· 由于它前身之前用的 Win7 的 MSE 软件，一开始本人对它好感爆棚，逢人推荐。现在因为 UWP 应用的经常抽风，已经换成火绒了 播放器 PotPlayer解码编码什么的很烦，PotPlayer 一个搞定全部设置在这，reg 直接导入即可 迅雷看看这是绿色安装版，方便迅雷边下边看（虽然破解版的迅雷边看边下的播放器可以自己设置） 压缩管理 推荐 7zip，开源免费 我用的 WinRAR，要破解原因是习惯了，下次想尝试使用 7zip 美化工具 大概是这样子，可能打码有点影响美观… 软煤雷达有点流氓的软件，但是仔细使用并不影响，而且有绿色版 Fence桌面图标管理软件，配合 Rolan 使用效果极佳 Rolan桌面图标管理神器，订阅制。但免费足够了，我发现这个后，再也离不开它，配合 Fence 效果极佳 StartIsBack任务栏透明，我用的Startisback 破解版。但据说此软件不适用于最新的win10创意者更新版，会引起很多问题（有一次大版本更新就是因为这个报错了，卸了就好了）推荐下一款替代品：TranslucentTB 实用工具Everything本地搜索软件，好用到爆炸 SumatraPDF你也可以使用浏览器看，个人喜欢这个轻便简洁的 PDF 阅读器 Prezi演示用的工具，说实话第一次见到它的时候惊艳到我了，相当于 Mac 下的 Keynote，同类的还有万彩的办公大师 演示 Picasa没记错的话应该是谷歌的看图软件，Win10 的照片查看器实在太垃圾！ TIM绿色版 QQ，虽然也开始臃肿了··· WeChat这个总不用介绍了吧··· calibre电子书管理软件，我记得也是全平台吧，貌似还是开源的，很不错,可惜没有在线同步功能，而且我对它需求不大 TyporaMarkDown 写作的神器，全平台可以使用，不用介绍，用过的人都说它好用 XMind很好用的脑图工具，就是不知道放出破解版以后，思杰马克丁会不会给我发律师函… 不想用破解版的朋友可以考虑一下百度脑图的开源版，全平台的也很不错，就是还有些 Bug OneDrive巨硬自家的东西，随着 Win10 的迭代，他也变得好用了起来。什么跟百度网盘比？百度网盘垃圾东西我早就不用了（百度网盘真好用+_+认真脸）PS：OneDrive 学生凭教育邮箱享受 1024GB 的空间哟 Internet Download Manager俗称 IDM，我的主力下载软件，好用到爆炸 百度网盘不是下载速度慢么？用油猴抓取真实链接，直接用这玩意下就好了 谷歌浏览器和 Edge 都有 IDM 插件支持，所以除了种子都可以下载 网页上的视频啊音频啊智能抓取也可以下载 金山电脑清理某大佬的绿色提取版，个人喜好 Ditto以前用的 ClipX，重装后换成了这货，体验还行使用见这里 VirtualBox比 VMware 那妖艳贱货好用那么一丢丢，主要是免费不用破解，占用资源还小，Linux 下也有 不过现在的我不怎么需要了（傲娇脸） TeamViewerQQ 那个远程桌面太鸡肋了，会卡，传输和帧率体验极差 既然要给妹子修电脑，好一点的远程桌面软件是你需要的（滑稽 有道云笔记记笔记的，签到获取容量 艺术处理曾经一口气装了会声会影、爱剪辑、Vegas、AE、PR、PS、AI 等软件，后来发现只学会了 PR 和 PS Adobe这里就不介绍了可以在 U盘 上直接运行，直接甩提取码 8m36 格式工厂转化音频的软件，安装需要小心勾选流氓软件 编程代码个人的编程环境搭建 Git不需要解释吧代码管理工具 Node.JS Hexo顺便把博客环境搭了 JavaJava 环境肯定要有··· Intellij IDEA学生党就不破解了···教程在此 Eclipse不是很想装··· Android Studio安装见这篇文章 Dev-C++写 C 和 C++ 的 IDE,逢问必推荐这款 什么？VC6.0++？拜托这都 8012 年了，还用远古工具 什么？Visual Studio？算了太大···不适合新手 相信我入门 C语言 选这款，你不会后悔的这玩意好久没用了，要不是今天写文章还想不起来 Python这个肯定要装.jpg，别手贱去装 Anaconda 这玩意 Visual Studio Code写项目文件好用到爆炸，还有丰富的插件 Notepad++不想用自带的文本编辑器，相比楼上那个 Visual Studio Code，这东西启动快 开源工具数字权利激活上文提到过 录屏工具离线文档浏览PicGo极好用的图床工具，羡慕会 Electron 的大佬 PuttySSH 登录 WinSCPWindows 与 Linux 之间互传文件 proxyee-down百度网盘下载 rufusU 盘刻录工具，装 Linux 系统会用到 佛曰不可说下载地址（点此下载）]]></content>
      <categories>
        <category>win 配置</category>
      </categories>
      <tags>
        <tag>奇淫怪技</tag>
        <tag>配置笔记</tag>
        <tag>软件</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[爬坑指南（二）]]></title>
    <url>%2F%E5%9F%BA%E4%BA%8E%E6%A0%91%E8%8E%93%E6%B4%BE%E7%9A%84%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%9B%B4%E6%96%B0%E7%89%88%2F</url>
    <content type="text"><![CDATA[对该项目不了解的朋友可先阅读爬坑指南（一） 背景因为系统开发与设计需要提交个人作业，但说来惭愧，手头上没有拿的出来的作品，只能将树莓派机器人交上去。 不看还好，一看吓一跳，图灵 API 失效，点歌功能失效，我还把物联网的器件交给了老师···看样子要更新代码不是一件很容易的事啊。事实证明，果然如此，这次相当于我基于原来的框架又重新写了一遍 更新说明图灵机器人 V2.0这里是个大坑，让我头疼了很久，在这耗费了大量时间 坑一：格式更新后的图灵机器人在命令行中要采用 POST 方式， JSON 的参数这样的形式才生效这么复杂的东西，不复制到代码里然后修改很容易出错 坑二：返回参数看下面这段代码，不经过测试，鬼知道怎么读取 1234567try: res = requests.post(url=apiUrl, data=json.dumps(data)) b = res.json() print(b) return b['results'][0]['values'][b['results'][0]['resultType']] except Exception: return "我无法理解【%s】的含义" % msg 坑三：原来的机器人不能用官网没有任何提示（可能有，反正我没看到）我一直再用老版本机器人，提示加密方式错误，提交反馈也没人理我，网站还用的 http。一开始我以为是实名认证的锅，提交了身份认证，足足让我等了两个礼拜才通过？！通过后仍然报错，摸索了很久，试了很多方法，一气之下新建机器人才算搞定总之，用图灵机器人 V2.0 的 API 一定要新建机器人 点歌播放也就三个月，小豆机器人的点歌 API 失效了.无奈只好重新寻找，皇天不负有心人，在经过一日一夜的寻找，在某网站发现了老版网易云的根据歌名得到 ID 的链接，得到 ID 就可以拼接链接，用 mplayer 播放 123456789101112import requestsimport jsondef get_musicurl(text): try: url = 'http://s.music.163.com/search/get/?src=lofter&amp;type=1&amp;filterDj=true&amp;s='+text+'&amp;limit=2&amp;offset=0&amp;callback=loft.w.g.cbFuncSearchMusic' res = requests.get(url) j = json.loads(res.text[27:-1]) id = j['result']['songs'][0]['id'] _url = 'http://music.163.com/song/media/outer/url?id='+str(id)+'.mp3' return _url except Exception: return "我找不到歌名【%s】" % text 图床功能博客嘛，图床是不可避免的。但是 iOS 只有 SM.MS，没有腾讯云的对象存储。有了需求，加上官网上的文档，功能就出来了。不过环境需要在本地配置。当然也可以将相关的密钥参数用模块的形式导入 优化去除了原先冗杂的抛异常代码以及小豆机器人失效的功能，使功能更加健全 例如可以输入 明天杭州到武汉的火车 查询相关信息 项目总结项目地址(将原有的分支改为主分支，master 变为副分支) 其实正确的做法应该在原来的基础上新建分支然后合并，而不是在本地上更改完以后提交代码，有所欠缺。]]></content>
      <categories>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>聊天机器人</tag>
        <tag>微信</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android Studio 安装]]></title>
    <url>%2FAndroid-Studio-%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[前言之前重新安装了双系统，装完怎么能没有 Android Studio 这个神器呢？但博主是个强迫症的人，一般软件不喜欢安装在 C 盘，最主要的原因是 C 盘空间初始分的太小，加上 Windows 的尿性，天天更新之类少空间就很头疼，所以应该尽可能减少占用 C 盘的空间。 配置 Java 环境这里我装的是 Java 8 的环境，配置环境对于老手来说手到擒来。我不会告诉你们我配的时候去网上看了遍教程…… 下载 Android Studio很多人推荐去官网下，这是最新的（可能有老版的，但我没找到），但 3.1 以上的版本我记得没有 Android Monitor，而且可能访问速度不够快，最好有个梯子，个人不是很推荐 我是去这里下的，点开页面惊不惊喜？竟然是中文的！你也可以直接在此页面点链接下载 Android Studio 3.0.1.exe 安装程序 安装 Android Studio更改安装路径，一路 next 即可 配置 Android Studio（重要）选择 Custom选择 Standard 模式可能更改不了路径 取消勾选 Android Virtual Device顾名思义安卓虚拟机，调试用的个人不喜欢安装这玩意，原因有很多： 占用空间只能装在 C 盘的 我有淘汰的 Android 手机 没有域名映射，调试的时候有点问题 实在不行，可以用夜神模拟器代替 总之，我就算是死也不会装的！真香 移动文件主要移动的是用户目录下的以下文件 更改 gradle 目录打开 AS 的 setting，进行相关设置 更改 Android Studio 配置相关目录进入 Android Studio 安装位置，比如我安装在了D:\Android Studio，找到D:\Android Studio\bin\idea.properties 更改配置文件，将两个路径更改为自己喜欢的路径，如图 更改完保存重启即可]]></content>
      <categories>
        <category>win 配置</category>
      </categories>
      <tags>
        <tag>Android Studio 安装配置</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[爬坑指南（一）]]></title>
    <url>%2F%E7%88%AC%E5%9D%91%E6%8C%87%E5%8D%97%2F</url>
    <content type="text"><![CDATA[在大一计算机导论课的时候，老师演示了用 APP 控制 LED 灯的系统，当时觉得很极客。脑海中就幻想，在九点下班的路上，在微信对话框内输入打开空调，回到家后就能享受迎面而来的凉风……而这一切都是你自己搭建的，那是多么美妙的事情！ 相关背景很早之前，学长送了我一个树莓派作为社团留任礼物。一直想愉快地玩耍，却迟迟不得空。 2018 年寒假终于感受到了嵌入式的魅力。有了寒假折腾的基础（折腾过程可能后续会写到博客），到了嵌入式系统开发的课程，为了大作业（其实还是自己想折腾）做了一个基于树莓派的微信机器人。 具体实施跟着脑海中的思路先画了思维导图 模块采用查阅资料后，了解到微信机器人 python 模块流行的有两种：itchat 和 wxpy。初步比较后采用 itchat，原因是wxpy是在itchat上改的。从某种意义上来说，itchat 更原始一点。itchat 官方文档例： 123@itchat.msg_register(TEXT) #处理对话框内的消息先根据消息类型进行注册def text_reply(msg): return Chat.has_music(msg['Text'] 自动回复回复对话需要相应的 API 支持，最常见的是图灵机器人（个人觉得是名字取得好才常见）。本项目用到的还有小豆机器人的 API 。国外还有被谷歌收购的 api.ai ，基于机器学习，有时间的话可以研究一下。例：小豆机器人注册账号得到相应的 Key 后可在浏览器打开链接（这里用的是我的 key）同理图灵机器人也会有相应的 Key，以res = requests.post(apiUrl, data=data).json()的代码方式（需要以 json 格式）请求数据，然后得到结果title = res.get(&#39;text&#39;) 控制 LED对于了解过树莓派 GPIO 的人来说很简单。 12345678import RPi.GPIO as GPIO #引入模块pin=17 #设置引脚GPIO.setmode(GPIO.BCM) #设置BCM模式GPIO.setup(pin,GPIO.OUT) #初始化def on(): GPIO.output(pin,True) #高电平开def off(): GPIO.output(pin,False) #低电平关 天气爬取室外天气爬取的是墨迹天气，参考的是树莓派语音闹钟这里用到的百度 API 很有意思，关于语音类的以后可能还会用到因为还有 DHT11 模块获取室内温湿度，所以在原来基础的代码上又加了一些代码 点歌播放 首先要有音乐播放器sudo apt-get install mplayer，这里用到的是 mplayer，后面直接跟链接就能播放 有了播放器后，接下来是音乐链接了。这里是最苦恼我的地方。几个月前在网上找了很多教程。Linux 相关的最出名的就是网易云音乐了。所以先找的是网易云音乐，什么 Node.js 版，CLI 下的等等，有的功能太全需要登陆，有的不符合要求······总之，均不满意。 后来无意中浏览小豆机器人功能列表时发现了这货竟然提供点歌播放，迅速输入连接获取的是一串文字，用正则表达式匹配后，竟然成功点歌播放了。只是因为采用的是 HTTP 协议，歌名不能有空格。大作业演示的时候不输空格就好了，总比没有好 有了链接后，还需多线程停止播放，不然你得听完整首歌才能开灯，太 Low 了！ 代码如下: 12345678910111213def has_music(text):thre=threading.Thread();if text[0].__eq__("点") and text[1].__eq__("歌"): reply = Tuling.get_response(text) pattern=re.compile(r'http://zhangmenshiting.*') url=re.findall(pattern,reply) url=url[0][0:-1] thre=threading.Thread(target=play,args=[url]) thre.start()elif text.__contains__("停止"): os.system('killall -9 mplayer' )else: return deng(text) 项目总结项目地址可能因为第一次做项目的关系，略显得有点稚嫩。不仅体现在代码上，还在工作流上有问题。后来静下心来，用思维导图重新梳理了思路，打了草稿，一切都迎刃而解。欢迎各位看官提出各种见解和建议！]]></content>
      <categories>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>聊天机器人</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[陌上花开]]></title>
    <url>%2F%E5%8D%9A%E5%AE%A2%E5%B0%8F%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[陌上花开，可缓缓归矣。 第一次知道这句话是在初二，是一位好友的 QQ 昵称。转眼六载有余，当时可曾想这句话会成为我人生中第一个博客的开篇句。这句话的意思大致是夫君想念妻子，希望妻子早点从娘家回来，但显然我并没有那么煽情。博客引用这句话意在自勉，希望不再自甘堕落，找回自我。 最近浏览大佬博客，看到了“人为什么活着”。这个问题每个人的每个阶段有不同的理解。现在的我为了学习，学好了为了什么？为了能找工作？找到工作为了什么？为了人活着。 也许那个时候又会问自己人活着为了什么？我会答，为了去做自己最喜欢做的事情，也是我 GitHub 的 bio “Do Your Favorites ”，真正做到的又有几个呢？没有人会告诉你也不能告诉你死后会怎么样，无神论，有神论？谁知道呢。Enjoy now enough! 博客目的 输出提升一月前加入了某大佬的知识星球，真的感触颇多，每天的分享，仿佛大家都在努力奋斗，而只有自己堕落在寝室中，无所事事……终于下定决心开个博客，写点东西，总比在寝室里睡觉看视频强。 查询笔记不久前，重装了 win10 系统，又重新配了各种环境，教程网上一通搜索……更折腾的是，有大神推荐我 Arch Linux，因为涉及到双系统，装了七八遍，也是官方 wiki 以及各种教程乱找，用多方版本成功体验。最后终于受不了，决定有一个适合自己的笔记博客。当然期待与各位看官的共同进步！ 选择平台 你为什么选这里？为什么呢？因为穷…自己的博客需要云主机、域名，哦，对了还有那个恼人的备案。其实主要是云主机，学生机每个月十块钱（其实不贵），但加上 VPS 每个月三十，个人认为不是很值。虽然“免费的是最贵的”，但显然 GitHub Pages 托管的博客要排除在外。 既然你有 VPS ，为什么不搭 VPS 上呢还是因为穷…开个玩笑，VPS 主机在旧金山，Ping 延迟过高，加上不想耦合太紧（就像代码一样）。如果我关 VPS 的话，要考虑博客等，过于麻烦。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>导航</tag>
        <tag>关于我</tag>
      </tags>
  </entry>
</search>
